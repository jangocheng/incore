// Code generated by protoc-gen-go.
// source: inapi/cluster.proto
// DO NOT EDIT!

package inapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// host
type ResHostOperate struct {
	Action   uint32   `protobuf:"varint,1,opt,name=action" json:"action,omitempty"`
	CellId   string   `protobuf:"bytes,2,opt,name=cell_id,json=cellId" json:"cell_id,omitempty"`
	ZoneId   string   `protobuf:"bytes,3,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	CpuUsed  int64    `protobuf:"varint,4,opt,name=cpu_used,json=cpuUsed" json:"cpu_used,omitempty"`
	MemUsed  int64    `protobuf:"varint,5,opt,name=mem_used,json=memUsed" json:"mem_used,omitempty"`
	LssUsed  int64    `protobuf:"varint,6,opt,name=lss_used,json=lssUsed" json:"lss_used,omitempty"`
	PortUsed []uint32 `protobuf:"varint,7,rep,packed,name=port_used,json=portUsed" json:"port_used,omitempty"`
}

func (m *ResHostOperate) Reset()                    { *m = ResHostOperate{} }
func (m *ResHostOperate) String() string            { return proto.CompactTextString(m) }
func (*ResHostOperate) ProtoMessage()               {}
func (*ResHostOperate) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ResHostOperate) GetAction() uint32 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *ResHostOperate) GetCellId() string {
	if m != nil {
		return m.CellId
	}
	return ""
}

func (m *ResHostOperate) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

func (m *ResHostOperate) GetCpuUsed() int64 {
	if m != nil {
		return m.CpuUsed
	}
	return 0
}

func (m *ResHostOperate) GetMemUsed() int64 {
	if m != nil {
		return m.MemUsed
	}
	return 0
}

func (m *ResHostOperate) GetLssUsed() int64 {
	if m != nil {
		return m.LssUsed
	}
	return 0
}

func (m *ResHostOperate) GetPortUsed() []uint32 {
	if m != nil {
		return m.PortUsed
	}
	return nil
}

type ResHost struct {
	Meta    *ObjectMeta       `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Operate *ResHostOperate   `protobuf:"bytes,2,opt,name=operate" json:"operate,omitempty"`
	Spec    *ResHostSpec      `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	Status  *ResHostStatus    `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	Prs     []*PbPodRepStatus `protobuf:"bytes,5,rep,name=prs" json:"prs,omitempty"`
}

func (m *ResHost) Reset()                    { *m = ResHost{} }
func (m *ResHost) String() string            { return proto.CompactTextString(m) }
func (*ResHost) ProtoMessage()               {}
func (*ResHost) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ResHost) GetMeta() *ObjectMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ResHost) GetOperate() *ResHostOperate {
	if m != nil {
		return m.Operate
	}
	return nil
}

func (m *ResHost) GetSpec() *ResHostSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *ResHost) GetStatus() *ResHostStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ResHost) GetPrs() []*PbPodRepStatus {
	if m != nil {
		return m.Prs
	}
	return nil
}

type ResHostList struct {
	Items []*ResHost `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (m *ResHostList) Reset()                    { *m = ResHostList{} }
func (m *ResHostList) String() string            { return proto.CompactTextString(m) }
func (*ResHostList) ProtoMessage()               {}
func (*ResHostList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ResHostList) GetItems() []*ResHost {
	if m != nil {
		return m.Items
	}
	return nil
}

type ResHostSpec struct {
	Platform    *ResPlatform     `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty"`
	Capacity    *ResHostResource `protobuf:"bytes,3,opt,name=capacity" json:"capacity,omitempty"`
	HttpPort    uint32           `protobuf:"varint,5,opt,name=http_port,json=httpPort" json:"http_port,omitempty"`
	PeerLanAddr string           `protobuf:"bytes,6,opt,name=peer_lan_addr,json=peerLanAddr" json:"peer_lan_addr,omitempty"`
	PeerWanAddr string           `protobuf:"bytes,7,opt,name=peer_wan_addr,json=peerWanAddr" json:"peer_wan_addr,omitempty"`
}

func (m *ResHostSpec) Reset()                    { *m = ResHostSpec{} }
func (m *ResHostSpec) String() string            { return proto.CompactTextString(m) }
func (*ResHostSpec) ProtoMessage()               {}
func (*ResHostSpec) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ResHostSpec) GetPlatform() *ResPlatform {
	if m != nil {
		return m.Platform
	}
	return nil
}

func (m *ResHostSpec) GetCapacity() *ResHostResource {
	if m != nil {
		return m.Capacity
	}
	return nil
}

func (m *ResHostSpec) GetHttpPort() uint32 {
	if m != nil {
		return m.HttpPort
	}
	return 0
}

func (m *ResHostSpec) GetPeerLanAddr() string {
	if m != nil {
		return m.PeerLanAddr
	}
	return ""
}

func (m *ResHostSpec) GetPeerWanAddr() string {
	if m != nil {
		return m.PeerWanAddr
	}
	return ""
}

type ResPlatform struct {
	Os     string `protobuf:"bytes,1,opt,name=os" json:"os,omitempty"`
	Kernel string `protobuf:"bytes,2,opt,name=kernel" json:"kernel,omitempty"`
	Arch   string `protobuf:"bytes,3,opt,name=arch" json:"arch,omitempty"`
}

func (m *ResPlatform) Reset()                    { *m = ResPlatform{} }
func (m *ResPlatform) String() string            { return proto.CompactTextString(m) }
func (*ResPlatform) ProtoMessage()               {}
func (*ResPlatform) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ResPlatform) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *ResPlatform) GetKernel() string {
	if m != nil {
		return m.Kernel
	}
	return ""
}

func (m *ResPlatform) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

type ResHostResource struct {
	Mem     uint64 `protobuf:"varint,1,opt,name=mem" json:"mem,omitempty"`
	Cpu     uint64 `protobuf:"varint,2,opt,name=cpu" json:"cpu,omitempty"`
	Storage uint64 `protobuf:"varint,3,opt,name=storage" json:"storage,omitempty"`
}

func (m *ResHostResource) Reset()                    { *m = ResHostResource{} }
func (m *ResHostResource) String() string            { return proto.CompactTextString(m) }
func (*ResHostResource) ProtoMessage()               {}
func (*ResHostResource) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *ResHostResource) GetMem() uint64 {
	if m != nil {
		return m.Mem
	}
	return 0
}

func (m *ResHostResource) GetCpu() uint64 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *ResHostResource) GetStorage() uint64 {
	if m != nil {
		return m.Storage
	}
	return 0
}

type ResHostStatus struct {
	Phase  string `protobuf:"bytes,1,opt,name=phase" json:"phase,omitempty"`
	Uptime uint64 `protobuf:"varint,2,opt,name=uptime" json:"uptime,omitempty"`
}

func (m *ResHostStatus) Reset()                    { *m = ResHostStatus{} }
func (m *ResHostStatus) String() string            { return proto.CompactTextString(m) }
func (*ResHostStatus) ProtoMessage()               {}
func (*ResHostStatus) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *ResHostStatus) GetPhase() string {
	if m != nil {
		return m.Phase
	}
	return ""
}

func (m *ResHostStatus) GetUptime() uint64 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

type ResZone struct {
	Meta     *ObjectMeta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	Phase    int32       `protobuf:"varint,3,opt,name=phase" json:"phase,omitempty"`
	Summary  string      `protobuf:"bytes,4,opt,name=summary" json:"summary,omitempty"`
	WanAddrs []string    `protobuf:"bytes,5,rep,name=wan_addrs,json=wanAddrs" json:"wan_addrs,omitempty"`
	LanAddrs []string    `protobuf:"bytes,6,rep,name=lan_addrs,json=lanAddrs" json:"lan_addrs,omitempty"`
	Cells    []*ResCell  `protobuf:"bytes,7,rep,name=cells" json:"cells,omitempty"`
	Options  []*Label    `protobuf:"bytes,8,rep,name=options" json:"options,omitempty"`
}

func (m *ResZone) Reset()                    { *m = ResZone{} }
func (m *ResZone) String() string            { return proto.CompactTextString(m) }
func (*ResZone) ProtoMessage()               {}
func (*ResZone) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *ResZone) GetMeta() *ObjectMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ResZone) GetPhase() int32 {
	if m != nil {
		return m.Phase
	}
	return 0
}

func (m *ResZone) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *ResZone) GetWanAddrs() []string {
	if m != nil {
		return m.WanAddrs
	}
	return nil
}

func (m *ResZone) GetLanAddrs() []string {
	if m != nil {
		return m.LanAddrs
	}
	return nil
}

func (m *ResZone) GetCells() []*ResCell {
	if m != nil {
		return m.Cells
	}
	return nil
}

func (m *ResZone) GetOptions() []*Label {
	if m != nil {
		return m.Options
	}
	return nil
}

type ResCell struct {
	Meta        *ObjectMeta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	ZoneId      string      `protobuf:"bytes,3,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	Phase       int32       `protobuf:"varint,4,opt,name=phase" json:"phase,omitempty"`
	Description string      `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
}

func (m *ResCell) Reset()                    { *m = ResCell{} }
func (m *ResCell) String() string            { return proto.CompactTextString(m) }
func (*ResCell) ProtoMessage()               {}
func (*ResCell) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *ResCell) GetMeta() *ObjectMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ResCell) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

func (m *ResCell) GetPhase() int32 {
	if m != nil {
		return m.Phase
	}
	return 0
}

func (m *ResCell) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ResZoneMasterNode struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Addr   string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	Action uint32 `protobuf:"varint,3,opt,name=action" json:"action,omitempty"`
}

func (m *ResZoneMasterNode) Reset()                    { *m = ResZoneMasterNode{} }
func (m *ResZoneMasterNode) String() string            { return proto.CompactTextString(m) }
func (*ResZoneMasterNode) ProtoMessage()               {}
func (*ResZoneMasterNode) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *ResZoneMasterNode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ResZoneMasterNode) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ResZoneMasterNode) GetAction() uint32 {
	if m != nil {
		return m.Action
	}
	return 0
}

type ResZoneMasterList struct {
	Version uint64               `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Leader  string               `protobuf:"bytes,2,opt,name=leader" json:"leader,omitempty"`
	Updated uint64               `protobuf:"varint,3,opt,name=updated" json:"updated,omitempty"`
	Items   []*ResZoneMasterNode `protobuf:"bytes,4,rep,name=items" json:"items,omitempty"`
}

func (m *ResZoneMasterList) Reset()                    { *m = ResZoneMasterList{} }
func (m *ResZoneMasterList) String() string            { return proto.CompactTextString(m) }
func (*ResZoneMasterList) ProtoMessage()               {}
func (*ResZoneMasterList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *ResZoneMasterList) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ResZoneMasterList) GetLeader() string {
	if m != nil {
		return m.Leader
	}
	return ""
}

func (m *ResZoneMasterList) GetUpdated() uint64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *ResZoneMasterList) GetItems() []*ResZoneMasterNode {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*ResHostOperate)(nil), "inapi.ResHostOperate")
	proto.RegisterType((*ResHost)(nil), "inapi.ResHost")
	proto.RegisterType((*ResHostList)(nil), "inapi.ResHostList")
	proto.RegisterType((*ResHostSpec)(nil), "inapi.ResHostSpec")
	proto.RegisterType((*ResPlatform)(nil), "inapi.ResPlatform")
	proto.RegisterType((*ResHostResource)(nil), "inapi.ResHostResource")
	proto.RegisterType((*ResHostStatus)(nil), "inapi.ResHostStatus")
	proto.RegisterType((*ResZone)(nil), "inapi.ResZone")
	proto.RegisterType((*ResCell)(nil), "inapi.ResCell")
	proto.RegisterType((*ResZoneMasterNode)(nil), "inapi.ResZoneMasterNode")
	proto.RegisterType((*ResZoneMasterList)(nil), "inapi.ResZoneMasterList")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ApiZoneMaster service

type ApiZoneMasterClient interface {
	HostStatusSync(ctx context.Context, in *ResHost, opts ...grpc.CallOption) (*ResZoneMasterList, error)
}

type apiZoneMasterClient struct {
	cc *grpc.ClientConn
}

func NewApiZoneMasterClient(cc *grpc.ClientConn) ApiZoneMasterClient {
	return &apiZoneMasterClient{cc}
}

func (c *apiZoneMasterClient) HostStatusSync(ctx context.Context, in *ResHost, opts ...grpc.CallOption) (*ResZoneMasterList, error) {
	out := new(ResZoneMasterList)
	err := grpc.Invoke(ctx, "/inapi.ApiZoneMaster/HostStatusSync", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ApiZoneMaster service

type ApiZoneMasterServer interface {
	HostStatusSync(context.Context, *ResHost) (*ResZoneMasterList, error)
}

func RegisterApiZoneMasterServer(s *grpc.Server, srv ApiZoneMasterServer) {
	s.RegisterService(&_ApiZoneMaster_serviceDesc, srv)
}

func _ApiZoneMaster_HostStatusSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResHost)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiZoneMasterServer).HostStatusSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inapi.ApiZoneMaster/HostStatusSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiZoneMasterServer).HostStatusSync(ctx, req.(*ResHost))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiZoneMaster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inapi.ApiZoneMaster",
	HandlerType: (*ApiZoneMasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HostStatusSync",
			Handler:    _ApiZoneMaster_HostStatusSync_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inapi/cluster.proto",
}

func init() { proto.RegisterFile("inapi/cluster.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 780 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xcd, 0x8e, 0x23, 0x35,
	0x10, 0xa6, 0x93, 0x4e, 0x3a, 0x71, 0x48, 0x76, 0xd7, 0x2c, 0x4b, 0x33, 0x5c, 0xa2, 0xd6, 0xb2,
	0xe4, 0x80, 0xb2, 0x52, 0xf6, 0x0a, 0x87, 0x15, 0x17, 0x46, 0x9a, 0x21, 0x91, 0x47, 0x08, 0x89,
	0x4b, 0xe4, 0xb4, 0x0b, 0xa6, 0xa1, 0xbb, 0x6d, 0xd9, 0x6e, 0x46, 0xc3, 0x8d, 0x27, 0xe0, 0xb5,
	0x78, 0x02, 0xce, 0x1c, 0x79, 0x0c, 0x54, 0xfe, 0xe9, 0xfc, 0x08, 0xd0, 0xde, 0xba, 0xea, 0xfb,
	0x5c, 0xf6, 0xe7, 0xfa, 0x5c, 0x4d, 0x3e, 0xa8, 0x5a, 0xae, 0xaa, 0xd7, 0x65, 0xdd, 0x19, 0x0b,
	0x7a, 0xad, 0xb4, 0xb4, 0x92, 0x8e, 0x5c, 0xf2, 0xea, 0xa9, 0xc7, 0x0e, 0xdc, 0x80, 0x07, 0xae,
	0x9e, 0xf8, 0x8c, 0x92, 0xc2, 0x27, 0x8a, 0x3f, 0x12, 0xb2, 0x60, 0x60, 0xbe, 0x96, 0xc6, 0x6e,
	0x15, 0x68, 0x6e, 0x81, 0xbe, 0x20, 0x63, 0x5e, 0xda, 0x4a, 0xb6, 0x79, 0xb2, 0x4c, 0x56, 0x73,
	0x16, 0x22, 0xfa, 0x11, 0xc9, 0x4a, 0xa8, 0xeb, 0x7d, 0x25, 0xf2, 0xc1, 0x32, 0x59, 0x4d, 0xd9,
	0x18, 0xc3, 0x6b, 0x81, 0xc0, 0xaf, 0xb2, 0x05, 0x04, 0x86, 0x1e, 0xc0, 0xf0, 0x5a, 0xd0, 0x8f,
	0xc9, 0xa4, 0x54, 0xdd, 0xbe, 0x33, 0x20, 0xf2, 0x74, 0x99, 0xac, 0x86, 0x2c, 0x2b, 0x55, 0xf7,
	0xad, 0x01, 0x07, 0x35, 0xd0, 0x78, 0x68, 0xe4, 0xa1, 0x06, 0x9a, 0x08, 0xd5, 0xc6, 0x78, 0x68,
	0xec, 0xa1, 0xda, 0x18, 0x07, 0x7d, 0x42, 0xa6, 0x4a, 0x6a, 0xeb, 0xb1, 0x6c, 0x39, 0x5c, 0xcd,
	0xd9, 0x04, 0x13, 0x08, 0x16, 0x7f, 0x25, 0x24, 0x0b, 0x52, 0xe8, 0xa7, 0x24, 0x6d, 0xc0, 0x72,
	0xa7, 0x60, 0xb6, 0x79, 0xb6, 0x76, 0xb2, 0xd7, 0xdb, 0xc3, 0x4f, 0x50, 0xda, 0x5b, 0xb0, 0x9c,
	0x39, 0x98, 0xbe, 0x26, 0x99, 0xf4, 0xaa, 0x9d, 0xa4, 0xd9, 0xe6, 0xc3, 0xc0, 0x3c, 0xbf, 0x12,
	0x16, 0x59, 0xf4, 0x15, 0x49, 0x8d, 0x82, 0xd2, 0xe9, 0x9c, 0x6d, 0xe8, 0x39, 0xfb, 0x4e, 0x41,
	0xc9, 0x1c, 0x4e, 0x3f, 0x27, 0x63, 0x63, 0xb9, 0xed, 0x8c, 0xd3, 0x3d, 0xdb, 0x3c, 0xbf, 0x60,
	0x3a, 0x8c, 0x05, 0x0e, 0xfd, 0x8c, 0x0c, 0x95, 0x36, 0xf9, 0x68, 0x39, 0x3c, 0x39, 0xc2, 0xee,
	0xb0, 0x93, 0x82, 0x81, 0x0a, 0x5c, 0x64, 0x14, 0x6f, 0xc8, 0x2c, 0x54, 0xb8, 0xa9, 0x8c, 0xa5,
	0x2f, 0xc9, 0xa8, 0xb2, 0xd0, 0x98, 0x7c, 0xe0, 0x56, 0x2e, 0xce, 0x37, 0x61, 0x1e, 0x2c, 0xfe,
	0x4c, 0xfa, 0x55, 0x78, 0x42, 0xba, 0x26, 0x13, 0x55, 0x73, 0xfb, 0x83, 0xd4, 0x4d, 0x50, 0x7d,
	0xa2, 0x63, 0x17, 0x10, 0xd6, 0x73, 0xe8, 0x86, 0x4c, 0x4a, 0xae, 0x78, 0x59, 0xd9, 0xc7, 0xa0,
	0xfb, 0xc5, 0xc5, 0x46, 0x60, 0x64, 0xa7, 0x4b, 0x60, 0x3d, 0x0f, 0x1b, 0x75, 0x6f, 0xad, 0xda,
	0x63, 0x73, 0x5c, 0x7f, 0xe7, 0x6c, 0x82, 0x89, 0x9d, 0xd4, 0x96, 0x16, 0x64, 0xae, 0x00, 0xf4,
	0xbe, 0xe6, 0xed, 0x9e, 0x0b, 0xa1, 0x5d, 0x97, 0xa7, 0x6c, 0x86, 0xc9, 0x1b, 0xde, 0xbe, 0x15,
	0x42, 0xf7, 0x9c, 0x87, 0xc8, 0xc9, 0x8e, 0x9c, 0xef, 0x3c, 0xa7, 0xb8, 0x76, 0xba, 0xe2, 0x89,
	0xe9, 0x82, 0x0c, 0xa4, 0x71, 0x1d, 0x9f, 0xb2, 0x81, 0x34, 0xe8, 0xe3, 0x9f, 0x41, 0xb7, 0x50,
	0x47, 0xbb, 0xfa, 0x88, 0x52, 0x92, 0x72, 0x5d, 0xde, 0x07, 0xaf, 0xba, 0xef, 0x62, 0x4b, 0x9e,
	0x5c, 0x88, 0xa1, 0x4f, 0xc9, 0xb0, 0x81, 0xc6, 0xd5, 0x4b, 0x19, 0x7e, 0x62, 0xa6, 0x54, 0x9d,
	0xab, 0x96, 0x32, 0xfc, 0xa4, 0x39, 0xc9, 0x8c, 0x95, 0x9a, 0xff, 0x08, 0xae, 0x5a, 0xca, 0x62,
	0x58, 0x7c, 0x49, 0xe6, 0x67, 0xbd, 0xa6, 0xcf, 0xc9, 0x48, 0xdd, 0x73, 0x03, 0xe1, 0x80, 0x3e,
	0xc0, 0x33, 0x76, 0xca, 0x56, 0x0d, 0x84, 0xaa, 0x21, 0x2a, 0xfe, 0xf6, 0x5e, 0xfe, 0x5e, 0xb6,
	0xd0, 0x7b, 0x79, 0xf0, 0xff, 0x5e, 0xee, 0x37, 0xc0, 0x93, 0x8c, 0xe2, 0x06, 0x78, 0xc2, 0xae,
	0x69, 0xb8, 0x7e, 0x74, 0x4e, 0x9c, 0xb2, 0x18, 0x62, 0x8b, 0xe2, 0xe5, 0x7a, 0xeb, 0x4d, 0xd9,
	0xe4, 0xc1, 0xdf, 0xac, 0x41, 0xb0, 0xee, 0xc1, 0xb1, 0x07, 0xeb, 0x08, 0xbe, 0x24, 0x23, 0x7c,
	0xf9, 0xc6, 0xbd, 0xc0, 0x33, 0xdb, 0x7d, 0x05, 0x75, 0xcd, 0x3c, 0x48, 0x5f, 0xe1, 0xdb, 0xc2,
	0xc1, 0x61, 0xf2, 0x89, 0xe3, 0xbd, 0x1f, 0x78, 0x37, 0xfc, 0x00, 0x35, 0x8b, 0x60, 0xf1, 0x9b,
	0x97, 0x8a, 0x4b, 0xdf, 0x55, 0xea, 0x7f, 0x0e, 0x9c, 0xfe, 0x0e, 0xd2, 0xd3, 0x3b, 0x58, 0x92,
	0x99, 0x00, 0x53, 0xea, 0xca, 0xed, 0xe8, 0xec, 0x38, 0x65, 0xa7, 0xa9, 0x62, 0x4b, 0x9e, 0x85,
	0xdb, 0xbe, 0xe5, 0x38, 0x46, 0xbf, 0x91, 0x02, 0xd0, 0x4f, 0x95, 0x88, 0x7e, 0xaa, 0x84, 0xf3,
	0x0d, 0x3a, 0x71, 0x10, 0x7c, 0x83, 0x36, 0x3d, 0xce, 0xca, 0xe1, 0xe9, 0xac, 0x2c, 0x7e, 0x4f,
	0x2e, 0x2a, 0xba, 0xf7, 0x9a, 0x93, 0xec, 0x17, 0xd0, 0x26, 0x8e, 0xd6, 0x94, 0xc5, 0x10, 0xeb,
	0xd4, 0xc0, 0x05, 0xc4, 0xea, 0x21, 0xc2, 0x15, 0x9d, 0x12, 0xdc, 0x82, 0x88, 0x06, 0x0b, 0x21,
	0x5d, 0xc7, 0xb7, 0x9f, 0xba, 0xcb, 0xcd, 0x8f, 0x4d, 0x38, 0x97, 0x11, 0xa6, 0xc0, 0xe6, 0x96,
	0xcc, 0xdf, 0xaa, 0xea, 0x88, 0xd1, 0x2f, 0xc8, 0xe2, 0x68, 0xcf, 0xbb, 0xc7, 0xb6, 0xa4, 0x17,
	0xf3, 0xe3, 0xea, 0x5f, 0x6b, 0xa2, 0x90, 0xe2, 0xbd, 0xc3, 0xd8, 0xfd, 0x3e, 0xde, 0xfc, 0x13,
	0x00, 0x00, 0xff, 0xff, 0xb2, 0x45, 0xa1, 0x7f, 0x7f, 0x06, 0x00, 0x00,
}

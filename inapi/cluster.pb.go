// Code generated by protoc-gen-go.
// source: inapi/cluster.proto
// DO NOT EDIT!

package inapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// host
type ResHostOperate struct {
	Action   uint32   `protobuf:"varint,1,opt,name=action" json:"action,omitempty"`
	CellId   string   `protobuf:"bytes,2,opt,name=cell_id,json=cellId" json:"cell_id,omitempty"`
	ZoneId   string   `protobuf:"bytes,3,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	CpuUsed  int64    `protobuf:"varint,4,opt,name=cpu_used,json=cpuUsed" json:"cpu_used,omitempty"`
	MemUsed  int64    `protobuf:"varint,5,opt,name=mem_used,json=memUsed" json:"mem_used,omitempty"`
	LssUsed  int64    `protobuf:"varint,6,opt,name=lss_used,json=lssUsed" json:"lss_used,omitempty"`
	PortUsed []uint32 `protobuf:"varint,7,rep,packed,name=port_used,json=portUsed" json:"port_used,omitempty"`
}

func (m *ResHostOperate) Reset()                    { *m = ResHostOperate{} }
func (m *ResHostOperate) String() string            { return proto.CompactTextString(m) }
func (*ResHostOperate) ProtoMessage()               {}
func (*ResHostOperate) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ResHostOperate) GetAction() uint32 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *ResHostOperate) GetCellId() string {
	if m != nil {
		return m.CellId
	}
	return ""
}

func (m *ResHostOperate) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

func (m *ResHostOperate) GetCpuUsed() int64 {
	if m != nil {
		return m.CpuUsed
	}
	return 0
}

func (m *ResHostOperate) GetMemUsed() int64 {
	if m != nil {
		return m.MemUsed
	}
	return 0
}

func (m *ResHostOperate) GetLssUsed() int64 {
	if m != nil {
		return m.LssUsed
	}
	return 0
}

func (m *ResHostOperate) GetPortUsed() []uint32 {
	if m != nil {
		return m.PortUsed
	}
	return nil
}

type ResHost struct {
	Meta    *ObjectMeta       `protobuf:"bytes,1,opt,name=meta" json:"meta,omitempty"`
	Operate *ResHostOperate   `protobuf:"bytes,2,opt,name=operate" json:"operate,omitempty"`
	Spec    *ResHostSpec      `protobuf:"bytes,3,opt,name=spec" json:"spec,omitempty"`
	Status  *ResHostStatus    `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	Prs     []*PbPodRepStatus `protobuf:"bytes,5,rep,name=prs" json:"prs,omitempty"`
}

func (m *ResHost) Reset()                    { *m = ResHost{} }
func (m *ResHost) String() string            { return proto.CompactTextString(m) }
func (*ResHost) ProtoMessage()               {}
func (*ResHost) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *ResHost) GetMeta() *ObjectMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ResHost) GetOperate() *ResHostOperate {
	if m != nil {
		return m.Operate
	}
	return nil
}

func (m *ResHost) GetSpec() *ResHostSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *ResHost) GetStatus() *ResHostStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ResHost) GetPrs() []*PbPodRepStatus {
	if m != nil {
		return m.Prs
	}
	return nil
}

type ResHostNew struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Action               uint32   `protobuf:"varint,2,opt,name=action" json:"action,omitempty"`
	ZoneId               string   `protobuf:"bytes,3,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	CellId               string   `protobuf:"bytes,4,opt,name=cell_id,json=cellId" json:"cell_id,omitempty"`
	PeerLanAddr          string   `protobuf:"bytes,5,opt,name=peer_lan_addr,json=peerLanAddr" json:"peer_lan_addr,omitempty"`
	SecretKey            string   `protobuf:"bytes,6,opt,name=secret_key,json=secretKey" json:"secret_key,omitempty"`
	ZoneMasters          []string `protobuf:"bytes,7,rep,name=zone_masters,json=zoneMasters" json:"zone_masters,omitempty"`
	ZoneIamServiceUrl    string   `protobuf:"bytes,8,opt,name=zone_iam_service_url,json=zoneIamServiceUrl" json:"zone_iam_service_url,omitempty"`
	ZoneInpackServiceUrl string   `protobuf:"bytes,9,opt,name=zone_inpack_service_url,json=zoneInpackServiceUrl" json:"zone_inpack_service_url,omitempty"`
}

func (m *ResHostNew) Reset()                    { *m = ResHostNew{} }
func (m *ResHostNew) String() string            { return proto.CompactTextString(m) }
func (*ResHostNew) ProtoMessage()               {}
func (*ResHostNew) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ResHostNew) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResHostNew) GetAction() uint32 {
	if m != nil {
		return m.Action
	}
	return 0
}

func (m *ResHostNew) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

func (m *ResHostNew) GetCellId() string {
	if m != nil {
		return m.CellId
	}
	return ""
}

func (m *ResHostNew) GetPeerLanAddr() string {
	if m != nil {
		return m.PeerLanAddr
	}
	return ""
}

func (m *ResHostNew) GetSecretKey() string {
	if m != nil {
		return m.SecretKey
	}
	return ""
}

func (m *ResHostNew) GetZoneMasters() []string {
	if m != nil {
		return m.ZoneMasters
	}
	return nil
}

func (m *ResHostNew) GetZoneIamServiceUrl() string {
	if m != nil {
		return m.ZoneIamServiceUrl
	}
	return ""
}

func (m *ResHostNew) GetZoneInpackServiceUrl() string {
	if m != nil {
		return m.ZoneInpackServiceUrl
	}
	return ""
}

type ResHostList struct {
	Items []*ResHost `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (m *ResHostList) Reset()                    { *m = ResHostList{} }
func (m *ResHostList) String() string            { return proto.CompactTextString(m) }
func (*ResHostList) ProtoMessage()               {}
func (*ResHostList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ResHostList) GetItems() []*ResHost {
	if m != nil {
		return m.Items
	}
	return nil
}

type ResHostSpec struct {
	Platform         *ResPlatform     `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty"`
	Capacity         *ResHostResource `protobuf:"bytes,3,opt,name=capacity" json:"capacity,omitempty"`
	HttpPort         uint32           `protobuf:"varint,5,opt,name=http_port,json=httpPort" json:"http_port,omitempty"`
	PeerLanAddr      string           `protobuf:"bytes,6,opt,name=peer_lan_addr,json=peerLanAddr" json:"peer_lan_addr,omitempty"`
	PeerWanAddr      string           `protobuf:"bytes,7,opt,name=peer_wan_addr,json=peerWanAddr" json:"peer_wan_addr,omitempty"`
	ExpDockerVersion string           `protobuf:"bytes,10,opt,name=exp_docker_version,json=expDockerVersion" json:"exp_docker_version,omitempty"`
	ExpRktVersion    string           `protobuf:"bytes,11,opt,name=exp_rkt_version,json=expRktVersion" json:"exp_rkt_version,omitempty"`
}

func (m *ResHostSpec) Reset()                    { *m = ResHostSpec{} }
func (m *ResHostSpec) String() string            { return proto.CompactTextString(m) }
func (*ResHostSpec) ProtoMessage()               {}
func (*ResHostSpec) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ResHostSpec) GetPlatform() *ResPlatform {
	if m != nil {
		return m.Platform
	}
	return nil
}

func (m *ResHostSpec) GetCapacity() *ResHostResource {
	if m != nil {
		return m.Capacity
	}
	return nil
}

func (m *ResHostSpec) GetHttpPort() uint32 {
	if m != nil {
		return m.HttpPort
	}
	return 0
}

func (m *ResHostSpec) GetPeerLanAddr() string {
	if m != nil {
		return m.PeerLanAddr
	}
	return ""
}

func (m *ResHostSpec) GetPeerWanAddr() string {
	if m != nil {
		return m.PeerWanAddr
	}
	return ""
}

func (m *ResHostSpec) GetExpDockerVersion() string {
	if m != nil {
		return m.ExpDockerVersion
	}
	return ""
}

func (m *ResHostSpec) GetExpRktVersion() string {
	if m != nil {
		return m.ExpRktVersion
	}
	return ""
}

type ResPlatform struct {
	Os     string `protobuf:"bytes,1,opt,name=os" json:"os,omitempty"`
	Kernel string `protobuf:"bytes,2,opt,name=kernel" json:"kernel,omitempty"`
	Arch   string `protobuf:"bytes,3,opt,name=arch" json:"arch,omitempty"`
}

func (m *ResPlatform) Reset()                    { *m = ResPlatform{} }
func (m *ResPlatform) String() string            { return proto.CompactTextString(m) }
func (*ResPlatform) ProtoMessage()               {}
func (*ResPlatform) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *ResPlatform) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *ResPlatform) GetKernel() string {
	if m != nil {
		return m.Kernel
	}
	return ""
}

func (m *ResPlatform) GetArch() string {
	if m != nil {
		return m.Arch
	}
	return ""
}

type ResHostResource struct {
	Mem uint64 `protobuf:"varint,1,opt,name=mem" json:"mem,omitempty"`
	Cpu uint64 `protobuf:"varint,2,opt,name=cpu" json:"cpu,omitempty"`
}

func (m *ResHostResource) Reset()                    { *m = ResHostResource{} }
func (m *ResHostResource) String() string            { return proto.CompactTextString(m) }
func (*ResHostResource) ProtoMessage()               {}
func (*ResHostResource) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *ResHostResource) GetMem() uint64 {
	if m != nil {
		return m.Mem
	}
	return 0
}

func (m *ResHostResource) GetCpu() uint64 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

type ResHostVolume struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Total uint64 `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	Used  uint64 `protobuf:"varint,3,opt,name=used" json:"used,omitempty"`
}

func (m *ResHostVolume) Reset()                    { *m = ResHostVolume{} }
func (m *ResHostVolume) String() string            { return proto.CompactTextString(m) }
func (*ResHostVolume) ProtoMessage()               {}
func (*ResHostVolume) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *ResHostVolume) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ResHostVolume) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ResHostVolume) GetUsed() uint64 {
	if m != nil {
		return m.Used
	}
	return 0
}

type ResHostStatus struct {
	Phase   string             `protobuf:"bytes,1,opt,name=phase" json:"phase,omitempty"`
	Uptime  uint32             `protobuf:"varint,2,opt,name=uptime" json:"uptime,omitempty"`
	Volumes []*ResHostVolume   `protobuf:"bytes,3,rep,name=volumes" json:"volumes,omitempty"`
	Stats   *PbStatsSampleFeed `protobuf:"bytes,4,opt,name=stats" json:"stats,omitempty"`
}

func (m *ResHostStatus) Reset()                    { *m = ResHostStatus{} }
func (m *ResHostStatus) String() string            { return proto.CompactTextString(m) }
func (*ResHostStatus) ProtoMessage()               {}
func (*ResHostStatus) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *ResHostStatus) GetPhase() string {
	if m != nil {
		return m.Phase
	}
	return ""
}

func (m *ResHostStatus) GetUptime() uint32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

func (m *ResHostStatus) GetVolumes() []*ResHostVolume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *ResHostStatus) GetStats() *PbStatsSampleFeed {
	if m != nil {
		return m.Stats
	}
	return nil
}

type ResHostBound struct {
	Masters   *ResZoneMasterList `protobuf:"bytes,2,opt,name=masters" json:"masters,omitempty"`
	ExpPods   []string           `protobuf:"bytes,5,rep,name=exp_pods,json=expPods" json:"exp_pods,omitempty"`
	ExpPsmaps []*NsPodServiceMap `protobuf:"bytes,6,rep,name=exp_psmaps,json=expPsmaps" json:"exp_psmaps,omitempty"`
}

func (m *ResHostBound) Reset()                    { *m = ResHostBound{} }
func (m *ResHostBound) String() string            { return proto.CompactTextString(m) }
func (*ResHostBound) ProtoMessage()               {}
func (*ResHostBound) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *ResHostBound) GetMasters() *ResZoneMasterList {
	if m != nil {
		return m.Masters
	}
	return nil
}

func (m *ResHostBound) GetExpPods() []string {
	if m != nil {
		return m.ExpPods
	}
	return nil
}

func (m *ResHostBound) GetExpPsmaps() []*NsPodServiceMap {
	if m != nil {
		return m.ExpPsmaps
	}
	return nil
}

type ResZone struct {
	Meta     *ObjectMeta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	Phase    int32       `protobuf:"varint,3,opt,name=phase" json:"phase,omitempty"`
	Summary  string      `protobuf:"bytes,4,opt,name=summary" json:"summary,omitempty"`
	WanAddrs []string    `protobuf:"bytes,5,rep,name=wan_addrs,json=wanAddrs" json:"wan_addrs,omitempty"`
	LanAddrs []string    `protobuf:"bytes,6,rep,name=lan_addrs,json=lanAddrs" json:"lan_addrs,omitempty"`
	Cells    []*ResCell  `protobuf:"bytes,7,rep,name=cells" json:"cells,omitempty"`
	Options  []*Label    `protobuf:"bytes,8,rep,name=options" json:"options,omitempty"`
	WanApi   string      `protobuf:"bytes,9,opt,name=wan_api,json=wanApi" json:"wan_api,omitempty"`
}

func (m *ResZone) Reset()                    { *m = ResZone{} }
func (m *ResZone) String() string            { return proto.CompactTextString(m) }
func (*ResZone) ProtoMessage()               {}
func (*ResZone) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *ResZone) GetMeta() *ObjectMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ResZone) GetPhase() int32 {
	if m != nil {
		return m.Phase
	}
	return 0
}

func (m *ResZone) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *ResZone) GetWanAddrs() []string {
	if m != nil {
		return m.WanAddrs
	}
	return nil
}

func (m *ResZone) GetLanAddrs() []string {
	if m != nil {
		return m.LanAddrs
	}
	return nil
}

func (m *ResZone) GetCells() []*ResCell {
	if m != nil {
		return m.Cells
	}
	return nil
}

func (m *ResZone) GetOptions() []*Label {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *ResZone) GetWanApi() string {
	if m != nil {
		return m.WanApi
	}
	return ""
}

type ResCell struct {
	Meta        *ObjectMeta `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	ZoneId      string      `protobuf:"bytes,3,opt,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	Phase       int32       `protobuf:"varint,4,opt,name=phase" json:"phase,omitempty"`
	Description string      `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	NodeNum     int32       `protobuf:"varint,6,opt,name=node_num,json=nodeNum" json:"node_num,omitempty"`
}

func (m *ResCell) Reset()                    { *m = ResCell{} }
func (m *ResCell) String() string            { return proto.CompactTextString(m) }
func (*ResCell) ProtoMessage()               {}
func (*ResCell) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *ResCell) GetMeta() *ObjectMeta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *ResCell) GetZoneId() string {
	if m != nil {
		return m.ZoneId
	}
	return ""
}

func (m *ResCell) GetPhase() int32 {
	if m != nil {
		return m.Phase
	}
	return 0
}

func (m *ResCell) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ResCell) GetNodeNum() int32 {
	if m != nil {
		return m.NodeNum
	}
	return 0
}

type ResZoneMasterNode struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Addr   string `protobuf:"bytes,2,opt,name=addr" json:"addr,omitempty"`
	Action uint32 `protobuf:"varint,3,opt,name=action" json:"action,omitempty"`
}

func (m *ResZoneMasterNode) Reset()                    { *m = ResZoneMasterNode{} }
func (m *ResZoneMasterNode) String() string            { return proto.CompactTextString(m) }
func (*ResZoneMasterNode) ProtoMessage()               {}
func (*ResZoneMasterNode) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *ResZoneMasterNode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ResZoneMasterNode) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *ResZoneMasterNode) GetAction() uint32 {
	if m != nil {
		return m.Action
	}
	return 0
}

type ResZoneMasterList struct {
	Version uint64               `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Leader  string               `protobuf:"bytes,2,opt,name=leader" json:"leader,omitempty"`
	Updated uint64               `protobuf:"varint,3,opt,name=updated" json:"updated,omitempty"`
	Items   []*ResZoneMasterNode `protobuf:"bytes,4,rep,name=items" json:"items,omitempty"`
}

func (m *ResZoneMasterList) Reset()                    { *m = ResZoneMasterList{} }
func (m *ResZoneMasterList) String() string            { return proto.CompactTextString(m) }
func (*ResZoneMasterList) ProtoMessage()               {}
func (*ResZoneMasterList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *ResZoneMasterList) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ResZoneMasterList) GetLeader() string {
	if m != nil {
		return m.Leader
	}
	return ""
}

func (m *ResZoneMasterList) GetUpdated() uint64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *ResZoneMasterList) GetItems() []*ResZoneMasterNode {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*ResHostOperate)(nil), "inapi.ResHostOperate")
	proto.RegisterType((*ResHost)(nil), "inapi.ResHost")
	proto.RegisterType((*ResHostNew)(nil), "inapi.ResHostNew")
	proto.RegisterType((*ResHostList)(nil), "inapi.ResHostList")
	proto.RegisterType((*ResHostSpec)(nil), "inapi.ResHostSpec")
	proto.RegisterType((*ResPlatform)(nil), "inapi.ResPlatform")
	proto.RegisterType((*ResHostResource)(nil), "inapi.ResHostResource")
	proto.RegisterType((*ResHostVolume)(nil), "inapi.ResHostVolume")
	proto.RegisterType((*ResHostStatus)(nil), "inapi.ResHostStatus")
	proto.RegisterType((*ResHostBound)(nil), "inapi.ResHostBound")
	proto.RegisterType((*ResZone)(nil), "inapi.ResZone")
	proto.RegisterType((*ResCell)(nil), "inapi.ResCell")
	proto.RegisterType((*ResZoneMasterNode)(nil), "inapi.ResZoneMasterNode")
	proto.RegisterType((*ResZoneMasterList)(nil), "inapi.ResZoneMasterList")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ApiHostMember service

type ApiHostMemberClient interface {
	HostJoin(ctx context.Context, in *ResHostNew, opts ...grpc.CallOption) (*ResHost, error)
}

type apiHostMemberClient struct {
	cc *grpc.ClientConn
}

func NewApiHostMemberClient(cc *grpc.ClientConn) ApiHostMemberClient {
	return &apiHostMemberClient{cc}
}

func (c *apiHostMemberClient) HostJoin(ctx context.Context, in *ResHostNew, opts ...grpc.CallOption) (*ResHost, error) {
	out := new(ResHost)
	err := grpc.Invoke(ctx, "/inapi.ApiHostMember/HostJoin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ApiHostMember service

type ApiHostMemberServer interface {
	HostJoin(context.Context, *ResHostNew) (*ResHost, error)
}

func RegisterApiHostMemberServer(s *grpc.Server, srv ApiHostMemberServer) {
	s.RegisterService(&_ApiHostMember_serviceDesc, srv)
}

func _ApiHostMember_HostJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResHostNew)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiHostMemberServer).HostJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inapi.ApiHostMember/HostJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiHostMemberServer).HostJoin(ctx, req.(*ResHostNew))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiHostMember_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inapi.ApiHostMember",
	HandlerType: (*ApiHostMemberServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HostJoin",
			Handler:    _ApiHostMember_HostJoin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inapi/cluster.proto",
}

// Client API for ApiZoneMaster service

type ApiZoneMasterClient interface {
	HostStatusSync(ctx context.Context, in *ResHost, opts ...grpc.CallOption) (*ResHostBound, error)
}

type apiZoneMasterClient struct {
	cc *grpc.ClientConn
}

func NewApiZoneMasterClient(cc *grpc.ClientConn) ApiZoneMasterClient {
	return &apiZoneMasterClient{cc}
}

func (c *apiZoneMasterClient) HostStatusSync(ctx context.Context, in *ResHost, opts ...grpc.CallOption) (*ResHostBound, error) {
	out := new(ResHostBound)
	err := grpc.Invoke(ctx, "/inapi.ApiZoneMaster/HostStatusSync", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ApiZoneMaster service

type ApiZoneMasterServer interface {
	HostStatusSync(context.Context, *ResHost) (*ResHostBound, error)
}

func RegisterApiZoneMasterServer(s *grpc.Server, srv ApiZoneMasterServer) {
	s.RegisterService(&_ApiZoneMaster_serviceDesc, srv)
}

func _ApiZoneMaster_HostStatusSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResHost)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiZoneMasterServer).HostStatusSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inapi.ApiZoneMaster/HostStatusSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiZoneMasterServer).HostStatusSync(ctx, req.(*ResHost))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiZoneMaster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inapi.ApiZoneMaster",
	HandlerType: (*ApiZoneMasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HostStatusSync",
			Handler:    _ApiZoneMaster_HostStatusSync_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inapi/cluster.proto",
}

func init() { proto.RegisterFile("inapi/cluster.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 1146 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xcd, 0x8e, 0x1b, 0x45,
	0x10, 0x8e, 0x7f, 0xc7, 0x6e, 0xc7, 0x9b, 0x6c, 0x27, 0x24, 0xc3, 0x22, 0xa4, 0x65, 0x14, 0xc2,
	0x1e, 0x82, 0x57, 0x72, 0x14, 0x71, 0x25, 0x80, 0x50, 0x16, 0xb2, 0x1b, 0xab, 0x57, 0x09, 0x12,
	0x17, 0xab, 0x3d, 0x53, 0x28, 0x83, 0x67, 0xa6, 0x5b, 0xd3, 0x3d, 0xd9, 0x5d, 0x6e, 0x3c, 0x01,
	0x17, 0x8e, 0xf0, 0x06, 0x3c, 0x00, 0x8f, 0xc0, 0x63, 0xf0, 0x28, 0xa8, 0xaa, 0xbb, 0x67, 0x6d,
	0x27, 0x20, 0x6e, 0x53, 0xf5, 0x7d, 0x55, 0xee, 0xae, 0x9f, 0xaf, 0xcd, 0xee, 0xe4, 0x95, 0xd4,
	0xf9, 0x71, 0x5a, 0x34, 0xc6, 0x42, 0x3d, 0xd3, 0xb5, 0xb2, 0x8a, 0x0f, 0xc8, 0x79, 0x70, 0xdb,
	0x61, 0x2b, 0x69, 0xc0, 0x01, 0x07, 0xb7, 0x9c, 0x47, 0xab, 0xcc, 0x3b, 0xf6, 0x9d, 0xc3, 0x58,
	0x69, 0x8d, 0x77, 0xdd, 0x73, 0xae, 0xca, 0x7c, 0x6a, 0xa0, 0x7e, 0x93, 0xa7, 0x3e, 0x36, 0xf9,
	0xab, 0xc3, 0xf6, 0x04, 0x98, 0x67, 0xca, 0xd8, 0x17, 0x1a, 0x6a, 0x69, 0x81, 0xdf, 0x63, 0x43,
	0x99, 0xda, 0x5c, 0x55, 0x71, 0xe7, 0xb0, 0x73, 0x34, 0x15, 0xde, 0xe2, 0xf7, 0x59, 0x94, 0x42,
	0x51, 0x2c, 0xf3, 0x2c, 0xee, 0x1e, 0x76, 0x8e, 0xc6, 0x62, 0x88, 0xe6, 0x49, 0x86, 0xc0, 0x4f,
	0xaa, 0x02, 0x04, 0x7a, 0x0e, 0x40, 0xf3, 0x24, 0xe3, 0xef, 0xb3, 0x51, 0xaa, 0x9b, 0x65, 0x63,
	0x20, 0x8b, 0xfb, 0x87, 0x9d, 0xa3, 0x9e, 0x88, 0x52, 0xdd, 0xbc, 0x34, 0x40, 0x50, 0x09, 0xa5,
	0x83, 0x06, 0x0e, 0x2a, 0xa1, 0x0c, 0x50, 0x61, 0x8c, 0x83, 0x86, 0x0e, 0x2a, 0x8c, 0x21, 0xe8,
	0x03, 0x36, 0xd6, 0xaa, 0xb6, 0x0e, 0x8b, 0x0e, 0x7b, 0x47, 0x53, 0x31, 0x42, 0x07, 0x82, 0xc9,
	0xdf, 0x1d, 0x16, 0xf9, 0xab, 0xf0, 0x8f, 0x59, 0xbf, 0x04, 0x2b, 0xe9, 0x06, 0x93, 0xf9, 0xfe,
	0x8c, 0x6e, 0x3f, 0x7b, 0xb1, 0xfa, 0x11, 0x52, 0x7b, 0x0a, 0x56, 0x0a, 0x82, 0xf9, 0x31, 0x8b,
	0x94, 0xbb, 0x35, 0x5d, 0x69, 0x32, 0x7f, 0xcf, 0x33, 0xb7, 0x4b, 0x22, 0x02, 0x8b, 0x3f, 0x64,
	0x7d, 0xa3, 0x21, 0xa5, 0x7b, 0x4e, 0xe6, 0x7c, 0x9b, 0x7d, 0xae, 0x21, 0x15, 0x84, 0xf3, 0x47,
	0x6c, 0x88, 0xd5, 0x6f, 0x0c, 0xdd, 0x7b, 0x32, 0xbf, 0xbb, 0xc3, 0x24, 0x4c, 0x78, 0x0e, 0xff,
	0x84, 0xf5, 0x74, 0x6d, 0xe2, 0xc1, 0x61, 0x6f, 0xe3, 0x08, 0x8b, 0xd5, 0x42, 0x65, 0x02, 0xb4,
	0xe7, 0x22, 0x23, 0xf9, 0xb3, 0xcb, 0x98, 0x4f, 0x71, 0x06, 0x17, 0x9c, 0xb3, 0x7e, 0x25, 0x4b,
	0xa0, 0x5b, 0x8e, 0x05, 0x7d, 0x6f, 0x74, 0xaf, 0xbb, 0xdb, 0xbd, 0x77, 0x37, 0x69, 0xa3, 0xad,
	0xfd, 0xad, 0xb6, 0x26, 0x6c, 0xaa, 0x01, 0xea, 0x65, 0x21, 0xab, 0xa5, 0xcc, 0xb2, 0x9a, 0xfa,
	0x34, 0x16, 0x13, 0x74, 0x3e, 0x97, 0xd5, 0xd3, 0x2c, 0xab, 0xf9, 0x87, 0x8c, 0x19, 0x48, 0x6b,
	0xb0, 0xcb, 0x35, 0x5c, 0x51, 0xb7, 0xc6, 0x62, 0xec, 0x3c, 0xdf, 0xc2, 0x15, 0xff, 0x88, 0xdd,
	0xa4, 0x1f, 0x2d, 0x25, 0xce, 0xb1, 0xa1, 0x96, 0x8d, 0xc5, 0x04, 0x7d, 0xa7, 0xce, 0xc5, 0x8f,
	0xd9, 0x5d, 0x77, 0x2e, 0x59, 0x2e, 0xfd, 0x68, 0x2e, 0x9b, 0xba, 0x88, 0x47, 0x94, 0x6b, 0x9f,
	0x0e, 0x29, 0xcb, 0x73, 0x87, 0xbc, 0xac, 0x0b, 0xfe, 0x84, 0xdd, 0x77, 0x01, 0x95, 0x96, 0xe9,
	0x7a, 0x2b, 0x66, 0x4c, 0x31, 0x94, 0xef, 0x84, 0xd0, 0xeb, 0xb0, 0xe4, 0x31, 0x9b, 0xf8, 0xca,
	0x3d, 0xcf, 0x8d, 0xe5, 0x0f, 0xd8, 0x20, 0xb7, 0x50, 0x9a, 0xb8, 0x4b, 0x45, 0xdf, 0xdb, 0xee,
	0x8f, 0x70, 0x60, 0xf2, 0x47, 0xb7, 0x8d, 0xc2, 0xe6, 0xf2, 0x19, 0x1b, 0xe9, 0x42, 0xda, 0x1f,
	0x54, 0x5d, 0xfa, 0x81, 0xd9, 0x18, 0x81, 0x85, 0x47, 0x44, 0xcb, 0xe1, 0x73, 0x36, 0x4a, 0xa5,
	0x96, 0x69, 0x6e, 0xaf, 0xfc, 0xc8, 0xdc, 0xdb, 0xf9, 0x21, 0x30, 0xaa, 0xa9, 0x53, 0x10, 0x2d,
	0x0f, 0x67, 0xfc, 0xb5, 0xb5, 0x7a, 0x89, 0x73, 0x4d, 0x25, 0x9f, 0x8a, 0x11, 0x3a, 0x16, 0xaa,
	0xb6, 0x6f, 0xf7, 0x64, 0xf8, 0x76, 0x4f, 0x02, 0xe7, 0x22, 0x70, 0xa2, 0x6b, 0xce, 0x77, 0x9e,
	0xf3, 0x88, 0x71, 0xb8, 0xd4, 0xcb, 0x4c, 0xa5, 0x6b, 0xa8, 0x97, 0x6f, 0xa0, 0x36, 0x38, 0x31,
	0x8c, 0x88, 0xb7, 0xe1, 0x52, 0x7f, 0x45, 0xc0, 0x2b, 0xe7, 0xe7, 0x0f, 0xd9, 0x2d, 0x64, 0xd7,
	0x6b, 0xdb, 0x52, 0x27, 0x44, 0x9d, 0xc2, 0xa5, 0x16, 0x6b, 0xeb, 0x79, 0xc9, 0x09, 0x55, 0x2b,
	0xd4, 0x81, 0xef, 0xb1, 0xae, 0x32, 0x7e, 0x38, 0xbb, 0xca, 0xe0, 0x68, 0xae, 0xa1, 0xae, 0xa0,
	0x08, 0xfa, 0xe1, 0x2c, 0x1c, 0x63, 0x59, 0xa7, 0xaf, 0xfd, 0x5c, 0xd2, 0x77, 0xf2, 0x84, 0xdd,
	0xda, 0x29, 0x11, 0xbf, 0xcd, 0x7a, 0x25, 0x94, 0x94, 0xaf, 0x2f, 0xf0, 0x13, 0x3d, 0xa9, 0x6e,
	0x28, 0x5b, 0x5f, 0xe0, 0x67, 0x72, 0xca, 0xa6, 0x3e, 0xec, 0x95, 0x2a, 0x9a, 0x12, 0xde, 0xb9,
	0x22, 0x77, 0xd9, 0xc0, 0x2a, 0x2b, 0x0b, 0x1f, 0xe8, 0x0c, 0x64, 0x92, 0xac, 0xf4, 0xc8, 0x49,
	0xdf, 0xc9, 0xef, 0x9d, 0x36, 0x9f, 0x5b, 0x43, 0x8c, 0xd5, 0xaf, 0xa5, 0x09, 0x09, 0x9d, 0x81,
	0x37, 0x6b, 0xb4, 0xcd, 0x4b, 0x08, 0x4b, 0xe7, 0x2c, 0x3e, 0x63, 0xd1, 0x1b, 0x3a, 0x87, 0x89,
	0x7b, 0x34, 0x67, 0x3b, 0x3a, 0xe0, 0x0e, 0x29, 0x02, 0x89, 0xcf, 0xd8, 0x80, 0x44, 0xdb, 0xab,
	0x46, 0xdc, 0x4a, 0x01, 0xfe, 0xba, 0x39, 0x97, 0xa5, 0x2e, 0xe0, 0x6b, 0x80, 0x4c, 0x38, 0x5a,
	0xf2, 0x6b, 0x87, 0xdd, 0xf4, 0xa9, 0xbe, 0x50, 0x4d, 0x95, 0xf1, 0x39, 0x8b, 0xc2, 0xae, 0x75,
	0xb7, 0x52, 0x08, 0x30, 0xdf, 0xb7, 0x5b, 0x87, 0x1b, 0x20, 0x02, 0x11, 0xf5, 0x16, 0xbb, 0xab,
	0x55, 0xe6, 0x24, 0x68, 0x2c, 0x22, 0xb8, 0xd4, 0x0b, 0x95, 0x19, 0xfe, 0x84, 0x31, 0x82, 0x4c,
	0x29, 0xb5, 0x89, 0x87, 0x74, 0x85, 0x30, 0xc1, 0x67, 0x66, 0xa1, 0x32, 0xbf, 0x60, 0xa7, 0x52,
	0x8b, 0x31, 0x06, 0x11, 0x31, 0xf9, 0xb9, 0x4b, 0x4a, 0x8c, 0x3f, 0xd8, 0x2a, 0x71, 0xf7, 0xbf,
	0x95, 0xb8, 0xad, 0x2b, 0x96, 0x7f, 0x10, 0xea, 0x1a, 0xb3, 0xc8, 0x34, 0x65, 0x29, 0xeb, 0x2b,
	0xaf, 0x4d, 0xc1, 0xc4, 0x2d, 0x09, 0xf3, 0x1d, 0x4e, 0x3d, 0xba, 0x70, 0xc3, 0x6d, 0x10, 0x2c,
	0x5a, 0x70, 0xe8, 0xc0, 0x22, 0x80, 0x0f, 0xd8, 0x00, 0x05, 0xce, 0x89, 0xd1, 0xd6, 0xe6, 0x7f,
	0x09, 0x45, 0x21, 0x1c, 0xc8, 0x1f, 0xe2, 0xcb, 0x80, 0xc2, 0x69, 0xe2, 0x11, 0xf1, 0x6e, 0x7a,
	0xde, 0x73, 0xb9, 0x82, 0x42, 0x04, 0x10, 0xd5, 0x93, 0xce, 0xa1, 0x73, 0xaf, 0x3e, 0x43, 0x3c,
	0x85, 0xce, 0x93, 0xdf, 0xdc, 0x6b, 0x84, 0x39, 0xff, 0x6f, 0x0d, 0xfe, 0x55, 0xa2, 0xdb, 0xe2,
	0xf4, 0x37, 0x8b, 0x73, 0xc8, 0x26, 0x19, 0x98, 0xb4, 0xce, 0xe9, 0x28, 0x41, 0x9d, 0x37, 0x5c,
	0xd8, 0xd9, 0x4a, 0x65, 0xb0, 0xac, 0x9a, 0x92, 0x84, 0x62, 0x20, 0x22, 0xb4, 0xcf, 0x9a, 0x32,
	0x79, 0xc1, 0xf6, 0xb7, 0x46, 0xe2, 0x4c, 0x65, 0x80, 0x0b, 0x9b, 0x67, 0x61, 0x61, 0xf3, 0x8c,
	0x16, 0x13, 0x05, 0xa4, 0xeb, 0x17, 0x13, 0x95, 0xe3, 0xfa, 0x7d, 0xe9, 0x6d, 0xbe, 0x2f, 0xc9,
	0x2f, 0x9d, 0x9d, 0x8c, 0x24, 0xb3, 0x31, 0x8b, 0x82, 0x62, 0xb8, 0xbd, 0x0d, 0x26, 0xe6, 0x29,
	0x40, 0x66, 0x10, 0xb2, 0x7b, 0x0b, 0x23, 0x1a, 0x9d, 0x49, 0xdb, 0x6e, 0x62, 0x30, 0x71, 0x39,
	0x9c, 0x64, 0xf7, 0xa9, 0x21, 0xef, 0x9c, 0x6c, 0xbc, 0x86, 0x17, 0xef, 0xf9, 0xe7, 0x6c, 0xfa,
	0x54, 0xe7, 0xb8, 0x1b, 0xa7, 0x50, 0xae, 0xa0, 0xe6, 0xc7, 0x6c, 0x84, 0xd6, 0x37, 0x2a, 0xaf,
	0xf8, 0xfe, 0xf6, 0x22, 0x9e, 0xc1, 0xc5, 0xc1, 0xce, 0x1b, 0x90, 0xdc, 0x98, 0x3f, 0xa3, 0x0c,
	0xd7, 0xd9, 0xf9, 0x67, 0x6c, 0xef, 0x5a, 0x0b, 0xce, 0xaf, 0xaa, 0x94, 0xef, 0x04, 0x1d, 0xdc,
	0xd9, 0xb6, 0x69, 0x2b, 0x93, 0x1b, 0xab, 0x21, 0xfd, 0xdb, 0x7a, 0xfc, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x33, 0x2e, 0x7b, 0xee, 0xd9, 0x09, 0x00, 0x00,
}
